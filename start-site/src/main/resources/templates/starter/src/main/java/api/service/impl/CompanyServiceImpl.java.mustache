package {{packageName}}.api.service.impl;

import {{packageName}}.api.controller.domain.DAOConverter;
import {{packageName}}.api.controller.dto.CompanyCreateRequestDto;
import {{packageName}}.api.controller.dto.CompanyDto;
import {{packageName}}.api.dao.CompanyDao;
import {{packageName}}.api.service.CompanyService;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.UUID;

@Service("companyService")
@Scope(proxyMode = ScopedProxyMode.TARGET_CLASS)
public class CompanyServiceImpl implements CompanyService {
    private final DAOConverter converter;
    private final CompanyDao companyDao;

    public CompanyServiceImpl(DAOConverter converter, CompanyDao companyDao) {
        this.converter = converter;
        this.companyDao = companyDao;
    }

    @Override
    public List<CompanyDto> getCompanyList() {
        return converter.convert(companyDao.getCompanies());
    }

    @Override
    public CompanyDto createCompany(CompanyCreateRequestDto company) {
        throw new UnsupportedOperationException("Not implemented");
    }

    @Override
    public void deleteCompany(UUID companyId) {
        throw new UnsupportedOperationException("Not implemented");

    }

    @Override
    public CompanyDto getCompany(UUID companyId) {
        throw new UnsupportedOperationException("Not implemented");
    }

    @Override
    public CompanyDto updateCompany(CompanyDto company) {
        throw new UnsupportedOperationException("Not implemented");
    }
}
